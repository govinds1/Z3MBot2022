// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.
#pragma once

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include <frc2/command/SubsystemBase.h>
#include <ctre/Phoenix.h>
#include <frc/motorcontrol/Spark.h>
#include <frc/DigitalInput.h>
#include "Constants.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

/**
 *
 *
 * @author ExampleAuthor
 */
class Intake: public frc2::SubsystemBase {
private:
    // It's desirable that everything possible is private except
    // for methods that implement subsystem capabilities
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    ctre::phoenix::motorcontrol::can::WPI_VictorSPX  m_motor{CANMotorIDs::kIntakeRollerID};
    ctre::phoenix::motorcontrol::can::WPI_VictorSPX m_wrist{CANMotorIDs::kIntakeWristMotorPort};

// Limit Switches here
    frc::DigitalInput upperLimitSwitch{DIOPorts::kIntakeUpperLimitSwitch};
    frc::DigitalInput lowerLimitSwitch {DIOPorts::kIntakeLowerLimitSwitch};

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
Intake();

    enum WristMovingState {
        Lowering, Raising, Idle    
    };
    enum WristLocation {
        Down, Up, Middle, Error
    };
    void Periodic() override;
    void SimulationPeriodic() override;

    void Run();
    void Stop();
    void MoveWristDown();
    void MoveWristUp();
    void StopWrist();
    void CheckForLimit();
    WristLocation GetWristLocation();
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
    static constexpr const double kIntakeSpeed = 1.0;
    static constexpr const double kWristSpeed = 0.5;

    WristMovingState currentWristState;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS


};

